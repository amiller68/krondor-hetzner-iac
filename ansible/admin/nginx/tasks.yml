# Initialize our Nginx Configuration
# Configuraiton:
# - email: email to associate with the certificate
# - domain: your domain (this should already have an A record pointing to your domain)
# TODO: configure static assets based on domain perhaps. For now I only care about a single domain.

- name: Debug
  debug:
    msg:
     - "Init Nginx Configuration"
     - "{{ email }}"
     - "{{ domain }}"

- name: Remove default Nginx configuration
  become: yes
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# TODO: I might need to properly ensure that this directory exists
#  For the time being, I know it exists on my current host
- name: Copy static site files assets
  become: yes
  copy:
    src: ./static/site
    dest: "/var/www/html/{{ domain }}"
    owner:  www-data
    group: www-data
    mode: 0643

# Setup root domain

- name: Setup server block
  become: yes
  template:
    src: ./config.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"

- name: Enable the server block
  become: yes
  file:
    src: "/etc/nginx/sites-available/{{ domain }}"
    dest: "/etc/nginx/sites-enabled/{{ domain }}"
    state: link

- name: Setup domain SSL certificate
  import_tasks: ./ssl.tasks.yml
  vars:
    target_domain: "{{ domain }}"
    email: "{{ email }}"

# Setup ipfs sub domain. Setup a basic auth for the ipfs api.

- name: Check if the /etc/nginx/.htpasswd_ipfs file exists
  become: yes
  stat:
    path: /etc/nginx/.htpasswd_ipfs
  register: htpasswd_ipfs_stat

- name: Setup a basic auth file for the ipfs subdomain
  import_tasks: ./basic_auth.tasks.yml
  vars:
    basic_auth_user: ipfs
  when: htpasswd_ipfs_stat.stat.exists == False

- name: Setup server block
  become: yes
  template:
    src: ./ipfs.config.j2
    dest: "/etc/nginx/sites-available/ipfs.{{ domain }}"

- name: Enable the server block
  become: yes
  file:
    src: "/etc/nginx/sites-available/ipfs.{{ domain }}"
    dest: "/etc/nginx/sites-enabled/ipfs.{{ domain }}"
    state: link

- name: Setup domain SSL certificate
  import_tasks: ./ssl.tasks.yml
  vars:
    target_domain: "ipfs.{{ domain }}"
    email: "{{ email }}"

- name: Restart Nginx
  become: yes
  service:
    name: nginx
    state: restarted