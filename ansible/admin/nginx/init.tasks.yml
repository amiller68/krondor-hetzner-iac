# Initialize our Nginx Configuration
# Configuraiton:
# - email: email to associate with the certificate
# - domain: your domain (this should already have an A record pointing to your domain)
# TODO: configure static assets based on domain perhaps. For now I only care about a single domain.

- name: Debug
  debug:
    msg:
     - "Init Nginx"
     - "{{ email }}"
     - "{{ domain }}"
     - "{{ key_path }}"
     - "{{ cert_path }}"

- name: Remove default Nginx configuration
  become: yes
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

# Setup static files and associated permissions
#  Be sure to make these files ownable by the default nginx user
- name: Copy static site files
  become: yes
  copy:
    src: ./static
    dest: "/var/www/html/{{ domain }}"
    owner:  www-data
    group: www-data
    mode: '0755'
- name: Extract static files
  find:
    paths: "/var/www/html/{{ domain }}/static"
    recurse: yes
  register: site_files
- name: Set correct file permissions for matched files
  become: yes
  file:
    path: "{{ item.path }}"
    mode: '0644'
  with_items: "{{ site_files.files }}"
  when: site_files.matched > 0

# Setup our server block for this domain
- name: Setup Nginx server block for our site
  become: yes
  template:
    src: ./config.j2
    dest: "/etc/nginx/sites-available/{{ domain }}"
- name: Enable the Nginx server block
  become: yes
  file:
    src: "/etc/nginx/sites-available/{{ domain }}"
    dest: "/etc/nginx/sites-enabled/{{ domain }}"
    state: link

- name: Check if the cert path exists
  stat: 
    path: "{{ cert_path }}"
  register: cert_file_stat

- name: Check if the key path exists
  stat: 
    path: "{{ key_path }}"
  register: key_file_stat

# TODO: don't run this if we don't need to. also validate whether cron job is being 
#  created for auto renewal
# Setup ssl as needed
- name: Create directory for SSL certificate
  become: yes
  file:
    path: "/etc/nginx/ssl"
    state: directory
    mode: 0755
- name: Generate self-signed SSL certificate
  become: yes
  command: openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN={{ domain }}" -keyout "{{ key_path }}" -out "{{ cert_path }}"
  args:
    creates: "{{ cert_path }}"
  when: cert_file_stat.stat.exists == false or key_file_stat.stat.exists == false

- name: Generate Let's Encrypt certificate
  become: yes
  shell: certbot --nginx -d {{ domain }} --non-interactive --agree-tos -m {{ email }} --redirect
  ignore_errors: true
  when: cert_file_stat.stat.exists == false or key_file_stat.stat.exists == false
